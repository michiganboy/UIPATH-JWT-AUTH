<?xml version="1.0" encoding="UTF-8"?>
<Activity x:Class="SalesforceJWT.RefreshToken" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:s="clr-namespace:System;assembly=mscorlib" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib">
  <x:Members>
    <x:Property Name="ClientId" Type="InArgument(x:String)" />
    <x:Property Name="Username" Type="InArgument(x:String)" />
    <x:Property Name="LoginUrl" Type="InArgument(x:String)" />
    <x:Property Name="PrivateKeyPath" Type="InArgument(x:String)" />
    <x:Property Name="TokenExpiry" Type="InArgument(x:DateTime)" />
    <x:Property Name="IsRefreshed" Type="OutArgument(x:Boolean)" />
    <x:Property Name="NewToken" Type="OutArgument(x:String)" />
    <x:Property Name="NewInstanceUrl" Type="OutArgument(x:String)" />
    <x:Property Name="NewExpiry" Type="OutArgument(x:DateTime)" />
  </x:Members>
  
  <Sequence DisplayName="Refresh Token">
    
    <!-- Variables -->
    <Variable x:TypeArguments="s:Boolean" Name="TokenNeedsRefresh" />
    <Variable x:TypeArguments="s:TimeSpan" Name="TimeUntilExpiry" />
    
    <!-- Check if token needs refresh -->
    <Assign DisplayName="Calculate Time Until Expiry">
      <Assign.To>
        <OutArgument x:TypeArguments="s:TimeSpan">[TimeUntilExpiry]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:TimeSpan">[TokenExpiry - DateTime.Now]</InArgument>
      </Assign.Value>
    </Assign>
    
    <!-- Check if token expires within buffer time (5 minutes) -->
    <Assign DisplayName="Check if Token Needs Refresh">
      <Assign.To>
        <OutArgument x:TypeArguments="s:Boolean">[TokenNeedsRefresh]</OutArgument>
      </Assign.To>
      <Assign.Value>
        <InArgument x:TypeArguments="s:Boolean">[TimeUntilExpiry.TotalSeconds &lt; 300]</InArgument>
      </Assign.Value>
    </Assign>
    
    <!-- Refresh token if needed -->
    <If DisplayName="Refresh Token if Needed">
      <If.Condition>
        <InArgument x:TypeArguments="s:Boolean">[TokenNeedsRefresh]</InArgument>
      </If.Condition>
      <If.Then>
        <ui:LogMessage DisplayName="Token Needs Refresh" Level="Info" Message="[&quot;Token expires in &quot; + TimeUntilExpiry.TotalMinutes.ToString("F1") + &quot; minutes. Refreshing...&quot;]" />
        
        <!-- Get new token -->
        <ui:InvokeWorkflowFile DisplayName="Get New Token" WorkflowFileName="GetSalesforceToken.xaml">
          <ui:InvokeWorkflowFile.Arguments>
            <InArgument x:TypeArguments="s:String" x:Key="ClientId">[ClientId]</InArgument>
            <InArgument x:TypeArguments="s:String" x:Key="Username">[Username]</InArgument>
            <InArgument x:TypeArguments="s:String" x:Key="LoginUrl">[LoginUrl]</InArgument>
            <InArgument x:TypeArguments="s:String" x:Key="PrivateKeyPath">[PrivateKeyPath]</InArgument>
            <OutArgument x:TypeArguments="s:String" x:Key="AccessToken">[NewToken]</OutArgument>
            <OutArgument x:TypeArguments="s:String" x:Key="InstanceUrl">[NewInstanceUrl]</OutArgument>
            <OutArgument x:TypeArguments="s:DateTime" x:Key="TokenExpiry">[NewExpiry]</OutArgument>
          </ui:InvokeWorkflowFile.Arguments>
        </ui:InvokeWorkflowFile>
        
        <!-- Set refresh results -->
        <Assign DisplayName="Set Refresh Results">
          <Assign.To>
            <OutArgument x:TypeArguments="s:Boolean">[IsRefreshed]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="s:Boolean">[True]</InArgument>
          </Assign.Value>
        </Assign>
        
        <ui:LogMessage DisplayName="Token Refreshed Successfully" Level="Info" Message="[&quot;Token refreshed successfully. New expiry: &quot; + NewExpiry.ToString()]" />
      </If.Then>
      <If.Else>
        <ui:LogMessage DisplayName="Token Still Valid" Level="Info" Message="[&quot;Token is still valid for &quot; + TimeUntilExpiry.TotalMinutes.ToString("F1") + &quot; minutes. No refresh needed.&quot;]" />
        
        <!-- Set no refresh needed -->
        <Assign DisplayName="Set No Refresh Needed">
          <Assign.To>
            <OutArgument x:TypeArguments="s:Boolean">[IsRefreshed]</OutArgument>
          </Assign.To>
          <Assign.Value>
            <InArgument x:TypeArguments="s:Boolean">[False]</InArgument>
          </Assign.Value>
        </Assign>
      </If.Else>
    </If>
  </Sequence>
</Activity>
