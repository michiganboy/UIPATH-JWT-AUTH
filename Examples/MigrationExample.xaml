<?xml version="1.0" encoding="UTF-8"?>
<Activity xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" x:Class="SalesforceJWT.MigrationExample" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:uix="http://schemas.uipath.com/workflow/activities/uix">
  <Sequence DisplayName="Migration Example: SOAP to JWT">
    <!-- Variables -->
    <Variable x:TypeArguments="x:String" Name="AccessToken" />
    <Variable x:TypeArguments="x:String" Name="InstanceUrl" />
    <Variable x:TypeArguments="x:DateTime" Name="TokenExpiry" />
    <Variable x:TypeArguments="x:String" Name="APIResponse" />
    <Variable x:TypeArguments="x:Int32" Name="StatusCode" />
    
    <!-- Step 1: JWT Authentication (Replaces SOAP) -->
    <ui:LogMessage DisplayName="JWT Authentication" Level="Info" Message="Using JWT authentication instead of SOAP..." />
    
    <ui:InvokeWorkflowFile DisplayName="Get JWT Token" WorkflowFileName="Main.xaml">
      <Arguments>
        <Argument x:TypeArguments="x:String" Name="AccessToken" Value="[AccessToken]" />
        <Argument x:TypeArguments="x:String" Name="InstanceUrl" Value="[InstanceUrl]" />
        <Argument x:TypeArguments="x:DateTime" Name="TokenExpiry" Value="[TokenExpiry]" />
      </Arguments>
    </ui:InvokeWorkflowFile>
    
    <ui:LogMessage DisplayName="JWT Authentication Complete" Level="Info" Message="[&quot;JWT authentication successful. Token expires at: &quot; + TokenExpiry.ToString()]" />
    
    <!-- Step 2: Make API Call (Same as before, but with JWT headers) -->
    <ui:LogMessage DisplayName="Making API Call" Level="Info" Message="Making API call with JWT authentication..." />
    
    <!-- BEFORE: SOAP Headers -->
    <!--
    <ui:HttpRequest>
      <Headers>
        <Header Name="SOAPAction" Value="login" />
        <Header Name="Content-Type" Value="text/xml; charset=utf-8" />
      </Headers>
    </ui:HttpRequest>
    -->
    
    <!-- AFTER: JWT Headers -->
    <ui:HttpRequest DisplayName="Get Account Describe with JWT" Method="GET" Url="[InstanceUrl + '/services/data/v58.0/sobjects/Account/describe']">
      <ui:HttpRequest.Headers>
        <scg:Dictionary x:TypeArguments="x:String, x:String">
          <KeyValuePair x:Key="Authorization" x:Value="[&quot;Bearer &quot; + AccessToken]" />
          <KeyValuePair x:Key="Content-Type" x:Value="application/json" />
        </scg:Dictionary>
      </ui:HttpRequest.Headers>
      <ui:HttpRequest.Result>
        <OutArgument x:TypeArguments="x:String">[APIResponse]</OutArgument>
      </ui:HttpRequest.Result>
      <ui:HttpRequest.StatusCode>
        <OutArgument x:TypeArguments="x:Int32">[StatusCode]</OutArgument>
      </ui:HttpRequest.StatusCode>
    </ui:HttpRequest>
    
    <!-- Step 3: Handle Response -->
    <If DisplayName="Check API Response">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">[StatusCode = 200]</InArgument>
      </If.Condition>
      <If.Then>
        <ui:LogMessage DisplayName="API Call Successful" Level="Info" Message="API call completed successfully with JWT authentication!" />
        <ui:LogMessage DisplayName="Response Length" Level="Info" Message="[&quot;Response length: &quot; + APIResponse.Length.ToString() + &quot; characters&quot;]" />
      </If.Then>
      <If.Else>
        <ui:LogMessage DisplayName="API Call Failed" Level="Error" Message="[&quot;API call failed with status code: &quot; + StatusCode.ToString()]" />
        <ui:LogMessage DisplayName="Error Response" Level="Error" Message="[&quot;Error response: &quot; + APIResponse]" />
      </If.Else>
    </If>
    
    <!-- Step 4: Additional API Calls (Same pattern) -->
    <ui:LogMessage DisplayName="Making Additional API Call" Level="Info" Message="Making additional API call to demonstrate pattern..." />
    
    <ui:HttpRequest DisplayName="Get User Info with JWT" Method="GET" Url="[InstanceUrl + '/services/data/v58.0/sobjects/User/describe']">
      <ui:HttpRequest.Headers>
        <scg:Dictionary x:TypeArguments="x:String, x:String">
          <KeyValuePair x:Key="Authorization" x:Value="[&quot;Bearer &quot; + AccessToken]" />
          <KeyValuePair x:Key="Content-Type" x:Value="application/json" />
        </scg:Dictionary>
      </ui:HttpRequest.Headers>
      <ui:HttpRequest.Result>
        <OutArgument x:TypeArguments="x:String">[APIResponse]</OutArgument>
      </ui:HttpRequest.Result>
      <ui:HttpRequest.StatusCode>
        <OutArgument x:TypeArguments="x:Int32">[StatusCode]</OutArgument>
      </ui:HttpRequest.StatusCode>
    </ui:HttpRequest>
    
    <If DisplayName="Check Additional API Response">
      <If.Condition>
        <InArgument x:TypeArguments="x:Boolean">[StatusCode = 200]</InArgument>
      </If.Condition>
      <If.Then>
        <ui:LogMessage DisplayName="Additional API Call Successful" Level="Info" Message="Additional API call completed successfully!" />
      </If.Then>
      <If.Else>
        <ui:LogMessage DisplayName="Additional API Call Failed" Level="Error" Message="[&quot;Additional API call failed with status code: &quot; + StatusCode.ToString()]" />
      </If.Else>
    </If>
    
    <!-- Step 5: Complete Migration Example -->
    <ui:LogMessage DisplayName="Migration Example Complete" Level="Info" Message="Migration example completed successfully! JWT authentication is working." />
    
    <!-- Step 6: Summary -->
    <ui:LogMessage DisplayName="Migration Summary" Level="Info" Message="=== MIGRATION SUMMARY ===" />
    <ui:LogMessage DisplayName="Before" Level="Info" Message="BEFORE: Used SOAP authentication with username/password" />
    <ui:LogMessage DisplayName="After" Level="Info" Message="AFTER: Using JWT authentication with private key" />
    <ui:LogMessage DisplayName="Benefits" Level="Info" Message="BENEFITS: More secure, hands-off, automatic token refresh" />
    <ui:LogMessage DisplayName="Changes Required" Level="Info" Message="CHANGES: Replace SOAP headers with JWT Bearer token headers" />
  </Sequence>
</Activity>
